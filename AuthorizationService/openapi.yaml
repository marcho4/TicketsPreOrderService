openapi: 3.0.0
info:
  title: Tickets Pre-Order Service API
  version: 1.0.0
  description: API для регистрации, авторизации и управления билетами

servers:
  - url: http://localhost:8081
    description: Локальный сервер разработки

paths:
  /register_organizer:
    post:
      summary: Регистрация организатора
      description: Принимает данные организатора и регистрирует его.
      operationId: registerOrganizer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Электронная почта организатора
                company:
                  type: string
                  description: Название компании организатора
                TIN:
                  type: string
                  description: Идентификационный номер налогоплательщика (ИНН)
              required:
                - email
                - company
                - TIN
      responses:
        '200':
          description: Успешная регистрация организатора
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  user_id:
                    type: string
                    description: Уникальный идентификатор зарегистрированного организатора
        '400':
          description: Неверный запрос (например, недействительный email или занятый email)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "bad request"
                  error:
                    type: string
                    description: Описание ошибки
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "internal server error"
                  error:
                    type: string
                    description: Описание ошибки

  /register_user:
    post:
      summary: Регистрация пользователя
      description: Регистрация нового пользователя в системе
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Имя пользователя
                last_name:
                  type: string
                  description: Фамилия пользователя
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя
              required:
                - name
                - last_name
                - email
      responses:
        '200':
          description: Успешная регистрация пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  user_id:
                    type: string
                    description: Уникальный идентификатор зарегистрированного пользователя
        '400':
          description: Неверный запрос (например, недействительный email или занятый email)
        '500':
          description: Внутренняя ошибка сервера

  /authorize:
    post:
      summary: Авторизация пользователя
      description: Аутентификация пользователя и получение JWT токена
      operationId: authorizeUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  format: login
                  description: Логин пользователя
                password:
                  type: string
                  format: password
                  description: Пароль пользователя
              required:
                - login
                - password
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  access_token:
                    type: string
                    description: JWT токен для авторизации
                  user_role:
                    type: string
                    description: Роль пользователя (user/organizer/admin)
        '401':
          description: Неверные учетные данные
        '500':
          description: Внутренняя ошибка сервера

#components:
#  securitySchemes:
#    bearerAuth:
#      type: http
#      scheme: bearer
#      bearerFormat: JWT

#security:
#  - bearerAuth: []